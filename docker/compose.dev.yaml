services:
  sim-works:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    env_file:
      - .env
    expose:
      - 8000
    hostname: 'server'
    volumes:
      - ..:/app
      # - static-vol:/app/static
      # - media-vol:/app/media
    command: [ "bash", "/app/docker/entrypoint.dev.sh" ]
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - SimWorksNet
    depends_on:
      sim-works-db:
        condition: service_healthy

  sim-works-db:
    image: postgres:${DB_IMAGE_TAG:-17.2-alpine}
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-AppDatabase}
      POSTGRES_USER: ${DB_USER:-appuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?password not set!}
      POSTGRES_HOST: ${DB_HOST:-db}
      POSTGRES_PORT: ${DB_PORT:-5432}
    networks:
      - SimWorksNet
    expose:
      - '${DB_PORT:-5432}'
    hostname: 'db'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  sim-works-nginx:
    image: nginx:${PROXY_IMAGE_TAG:-latest}
    ports:
      - "80:80"
    env_file:
      - .env
    volumes:
      - ../nginx/dev.conf:/etc/nginx/conf.d/default.conf
      - ..:/app
      # - static-vol:/app/static
      # - media-vol:/app/media
    depends_on:
      - sim-works
    networks:
      - SimWorksNet

  sim-works-redis:
    image: redis:${REDIS_IMAGE_TAG:-7.4.2-alpine}
    command: redis-server --requirepass ${REDIS_PASSWORD:?password not set!}
    container_name: ${REDIS_HOSTNAME:-redis}
    hostname: ${REDIS_HOSTNAME:-redis}
    networks:
      - SimWorksNet
    expose:
      - '${REDIS_PORT:-6379}'

volumes:
  db-data:
  static-vol:
  media-vol:
networks:
  SimWorksNet:
    driver: bridge
