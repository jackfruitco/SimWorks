# syntax=docker/dockerfile:1

ARG UV_VERSION=0.6.16
ARG PYTHON_VERSION=3.13

# === Builder Stage ===
FROM ghcr.io/astral-sh/uv:${UV_VERSION} AS uv
FROM python:${PYTHON_VERSION}-slim-bookworm AS builder

COPY --from=uv /uv /uvx /bin/

WORKDIR /app

ENV UV_COMPILE_BYTECODE=1 \
    UV_LINK_MODE=copy \
    UV_SYSTEM_PYTHON=1 \
    UV_PROJECT_ENVIRONMENT=/usr/local

# Install project dependencies globally into image Python
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --compile-bytecode && \
    uv pip list

# === Runtime Stage ===
FROM python:${PYTHON_VERSION}-slim-bookworm AS run

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Copy dependencies and app source
COPY --from=builder /usr/local /usr/local

COPY SimWorks /app/SimWorks
COPY docker/entrypoint.dev.sh /app/docker/entrypoint.dev.sh
COPY docker/healthcheck.sh /app/docker/healthcheck.sh

RUN chmod +x /app/docker/entrypoint.dev.sh /app/docker/healthcheck.sh

# Create non-privileged user
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

# Static/media/logs setup
RUN mkdir -p /app/static /app/media /app/logs && \
    chown -R appuser:appuser /app/static /app/media /app/logs

# (Optional for dev): Install handy tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    nano \
    curl && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Healthcheck
HEALTHCHECK --interval=10s --timeout=5s --start-period=10s --retries=10 CMD /app/docker/healthcheck.sh

# USER appuser  # Enable when ready

WORKDIR /app/SimWorks

ENTRYPOINT ["/app/docker/entrypoint.dev.sh"]